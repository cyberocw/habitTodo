Index: app/src/main/java/com/cyberocw/habittodosecretary/util/BootReceiver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cyberocw/habittodosecretary/util/BootReceiver.java	(revision )
+++ app/src/main/java/com/cyberocw/habittodosecretary/util/BootReceiver.java	(revision 49da8b1885f0c7b6778c9a3205e395c547088d63)
@@ -21,7 +21,8 @@
 		if (intent.getAction().equals("android.intent.action.BOOT_COMPLETED")) {
 			AlarmDataManager alarmDataManager = new AlarmDataManager(context, Calendar.getInstance());
 
-			alarmDataManager.resetMinAlarmCall();
+			alarmDataManager.resetMinAlarmCall(Const.ALARM_DATE_TYPE.REPEAT);
+			alarmDataManager.resetMinAlarmCall(Const.ALARM_DATE_TYPE.SET_DATE);
 		}
 	}
 }
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision )
+++ build.gradle	(revision 49da8b1885f0c7b6778c9a3205e395c547088d63)
@@ -5,7 +5,7 @@
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:2.1.3'
+        classpath 'com.android.tools.build:gradle:1.3.0'
 
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
Index: app/app.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app.iml	(revision )
+++ app/app.iml	(revision 49da8b1885f0c7b6778c9a3205e395c547088d63)
@@ -12,7 +12,10 @@
         <option name="SELECTED_TEST_ARTIFACT" value="_android_test_" />
         <option name="ASSEMBLE_TASK_NAME" value="assembleDebug" />
         <option name="COMPILE_JAVA_TASK_NAME" value="compileDebugSources" />
+        <option name="ASSEMBLE_TEST_TASK_NAME" value="assembleDebugAndroidTest" />
+        <option name="COMPILE_JAVA_TEST_TASK_NAME" value="compileDebugAndroidTestSources" />
         <afterSyncTasks>
+          <task>generateDebugAndroidTestSources</task>
           <task>generateDebugSources</task>
         </afterSyncTasks>
         <option name="ALLOW_USER_CONFIGURATION" value="false" />
@@ -25,7 +28,7 @@
   </component>
   <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_7" inherit-compiler-output="false">
     <output url="file://$MODULE_DIR$/build/intermediates/classes/debug" />
-    <output-test url="file://$MODULE_DIR$/build/intermediates/classes/test/debug" />
+    <output-test url="file://$MODULE_DIR$/build/intermediates/classes/androidTest/debug" />
     <exclude-output />
     <content url="file://$MODULE_DIR$">
       <sourceFolder url="file://$MODULE_DIR$/build/generated/source/r/debug" isTestSource="false" generated="true" />
@@ -47,15 +50,6 @@
       <sourceFolder url="file://$MODULE_DIR$/src/debug/java" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/jni" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/debug/rs" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/debug/shaders" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/res" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/resources" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/assets" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/aidl" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/java" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/jni" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/rs" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/shaders" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/res" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/assets" type="java-resource" />
@@ -63,15 +57,6 @@
       <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/jni" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/main/rs" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/main/shaders" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/res" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/resources" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/assets" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/aidl" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/jni" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/rs" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/shaders" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/res" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/resources" type="java-test-resource" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/assets" type="java-test-resource" />
@@ -79,34 +64,23 @@
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/java" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/jni" isTestSource="true" />
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/rs" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/shaders" isTestSource="true" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/assets" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/blame" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/builds" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/bundles" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/classes" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/debug" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/dependency-cache" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/dex" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.android.support/appcompat-v7/22.2.1/jars" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.android.support/design/22.2.0/jars" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.android.support/support-v13/22.2.1/jars" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.android.support/support-v4/22.2.1/jars" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.getbase/floatingactionbutton/1.10.0/jars" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-classes" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-runtime-classes" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-safeguard" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-verifier" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/instant-run-support" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/jniLibs" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/manifests" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/pre-dexed" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/reload-dex" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/res" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/restart-dex" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/rs" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/shaders" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/symbols" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/transforms" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/tmp" />
       <excludeFolder url="file://$MODULE_DIR$/build/outputs" />
       <excludeFolder url="file://$MODULE_DIR$/build/tmp" />
     </content>
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision )
+++ .idea/gradle.xml	(revision 49da8b1885f0c7b6778c9a3205e395c547088d63)
@@ -5,15 +5,9 @@
       <GradleProjectSettings>
         <option name="distributionType" value="LOCAL" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
-        <option name="gradleHome" value="C:\Program Files\Android\Android Studio\gradle\gradle-2.14.1" />
+        <option name="gradleHome" value="C:\Program Files\Android\Android Studio\gradle\gradle-2.4" />
         <option name="gradleJvm" value="1.7" />
         <option name="modules">
-          <set>
-            <option value="$PROJECT_DIR$" />
-            <option value="$PROJECT_DIR$/app" />
-          </set>
-        </option>
-        <option name="myModules">
           <set>
             <option value="$PROJECT_DIR$" />
             <option value="$PROJECT_DIR$/app" />
\ No newline at end of file
Index: app/src/main/java/com/cyberocw/habittodosecretary/alaram/vo/AlarmTimeVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cyberocw/habittodosecretary/alaram/vo/AlarmTimeVO.java	(revision )
+++ app/src/main/java/com/cyberocw/habittodosecretary/alaram/vo/AlarmTimeVO.java	(revision 49da8b1885f0c7b6778c9a3205e395c547088d63)
@@ -1,19 +1,16 @@
 package com.cyberocw.habittodosecretary.alaram.vo;
 
-import java.io.Serializable;
-
 /**
  * Created by cyberocw on 2015-09-06.
  *
  */
-public class AlarmTimeVO implements Serializable{
+public class AlarmTimeVO {
 	private long timeStamp;
 	private long id;
 	private int callTime;
 	private int useYn;
 	private long fId;
 	private String alarmTitle;
-	private static final long serialVersionUID = 1L;
 
 	public String getAlarmTitle() {
 		return alarmTitle;
Index: app/src/main/java/com/cyberocw/habittodosecretary/alaram/ui/AlarmDialogNew.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cyberocw/habittodosecretary/alaram/ui/AlarmDialogNew.java	(revision )
+++ app/src/main/java/com/cyberocw/habittodosecretary/alaram/ui/AlarmDialogNew.java	(revision 49da8b1885f0c7b6778c9a3205e395c547088d63)
@@ -457,9 +457,6 @@
 //		llRepeatDayWrap = (LinearLayout) getView().findViewById(R.id.llRepeatDayWrap);
 		llTimePickWrap.setVisibility(View.VISIBLE);
 
-		if(c == null)
-			c = Calendar.getInstance();
-
 		switch(alarmDateType){
 			case Const.ALARM_DATE_TYPE.REPEAT :
 				llRepeatDayWrap.setVisibility(View.VISIBLE);
Index: app/src/main/java/com/cyberocw/habittodosecretary/memo/MemoFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cyberocw/habittodosecretary/memo/MemoFragment.java	(revision )
+++ app/src/main/java/com/cyberocw/habittodosecretary/memo/MemoFragment.java	(revision 49da8b1885f0c7b6778c9a3205e395c547088d63)
@@ -291,7 +291,8 @@
 	public void deleteMemo(long id){
 		if(mMemoDataManager.deleteItemById(id)){
 			Toast.makeText(mCtx, "삭제 되었습니다", Toast.LENGTH_SHORT).show();
-			mAlarmDataManager.resetMinAlarmCall();
+			mAlarmDataManager.resetMinAlarmCall(Const.ALARM_DATE_TYPE.SET_DATE);
+			mAlarmDataManager.resetMinAlarmCall(Const.ALARM_DATE_TYPE.REPEAT);
 		}else{
 			Toast.makeText(mCtx, "삭제에 실패했습니다", Toast.LENGTH_SHORT).show();
 		}
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>x-windows-949
===================================================================
--- gradle/wrapper/gradle-wrapper.properties	(revision )
+++ gradle/wrapper/gradle-wrapper.properties	(revision 49da8b1885f0c7b6778c9a3205e395c547088d63)
@@ -1,6 +1,6 @@
-#Sun Aug 28 10:44:06 KST 2016
+#Fri Aug 14 10:16:13 KST 2015
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.14.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-2.4-all.zip
Index: app/src/main/java/com/cyberocw/habittodosecretary/alaram/AlarmFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cyberocw/habittodosecretary/alaram/AlarmFragment.java	(revision )
+++ app/src/main/java/com/cyberocw/habittodosecretary/alaram/AlarmFragment.java	(revision 49da8b1885f0c7b6778c9a3205e395c547088d63)
@@ -467,8 +467,9 @@
 					Toast.makeText(mCtx, "DB를 수정하는데 실패했습니다", Toast.LENGTH_LONG).show();
 
 				// 수정일 경우 date type이 변경 될 수도 있기 때문에 두개 모두 갱신
+				mAlarmDataManager.resetMinAlarmCall(Const.ALARM_DATE_TYPE.REPEAT);
+				mAlarmDataManager.resetMinAlarmCall(Const.ALARM_DATE_TYPE.SET_DATE);
 				refreshAlarmList();
-				mAlarmDataManager.resetMinAlarmCall();
 				break;
 
 			case Const.ALARM_INTERFACE_CODE.ADD_TIMER_FINISH_CODE :
Index: app/src/main/java/com/cyberocw/habittodosecretary/alaram/receiver/AlarmReceiver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cyberocw/habittodosecretary/alaram/receiver/AlarmReceiver.java	(revision )
+++ app/src/main/java/com/cyberocw/habittodosecretary/alaram/receiver/AlarmReceiver.java	(revision 49da8b1885f0c7b6778c9a3205e395c547088d63)
@@ -1,17 +1,12 @@
 package com.cyberocw.habittodosecretary.alaram.receiver;
 
 import android.content.BroadcastReceiver;
-import android.content.ComponentName;
 import android.content.Context;
 import android.content.Intent;
-import android.content.ServiceConnection;
-import android.os.IBinder;
 import android.util.Log;
 
 import com.cyberocw.habittodosecretary.alaram.AlarmDataManager;
-import com.cyberocw.habittodosecretary.alaram.service.AlarmBackgroudService;
 import com.cyberocw.habittodosecretary.alaram.service.NotificationService;
-import com.cyberocw.habittodosecretary.alaram.service.TimerService;
 import com.cyberocw.habittodosecretary.util.TTSNoti;
 
 import java.util.Calendar;
@@ -19,39 +14,14 @@
 /**
  * Created by cyberocw on 2015-08-31.
  */
-//// TODO: 2016-10-03 데이터 전달할 객체 생성하여 전달하기 serializable 혹은 parceable
 public class AlarmReceiver extends BroadcastReceiver{
-	private AlarmBackgroudService mService;
-	private boolean mBound;
+
 	@Override
 	public void onReceive(Context context, Intent intent) {
 		String Noti_title = intent.getExtras().getString("title");
 		String Noti_message = intent.getExtras().getString("notes");
 		long reqCode = intent.getExtras().getLong("reqCode");
 		int alarmDateType = intent.getExtras().getInt("alarmDateType");
-		long realTime = intent.getExtras().getLong("realTime");
-
-		Log.d("AlarmReciever", Noti_title + " " + Noti_message + " type= " + alarmDateType);
-		Intent myIntent = new Intent(context, AlarmBackgroudService.class);
-		myIntent.putExtras(intent.getExtras());
-		myIntent.putExtra("title", Noti_title);
-		myIntent.putExtra("notes", Noti_message);
-		myIntent.putExtra("reqCode", reqCode);
-		myIntent.putExtra("alarmDateType", alarmDateType);
-		myIntent.putExtra("realTime", realTime);
-		context.startService(myIntent);
-		//context.bindService(intent, mConnection, Context.BIND_AUTO_CREATE);
-
-		AlarmDataManager mAlarmDataManager = new AlarmDataManager(context, Calendar.getInstance());
-		mAlarmDataManager.resetMinAlarmCall(alarmDateType);
-	}
-
-	public void onReceiveOri(Context context, Intent intent) {
-		String Noti_title = intent.getExtras().getString("title");
-		String Noti_message = intent.getExtras().getString("notes");
-		long reqCode = intent.getExtras().getLong("reqCode");
-		int alarmDateType = intent.getExtras().getInt("alarmDateType");
-		long realTime = intent.getExtras().getLong("realTime");
 
 		Log.d("AlarmReciever", Noti_title + " " + Noti_message + " type= " + alarmDateType);
 		Intent myIntent = new Intent(context, NotificationService.class);
\ No newline at end of file
Index: app/src/main/java/com/cyberocw/habittodosecretary/alaram/AlarmDataManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cyberocw/habittodosecretary/alaram/AlarmDataManager.java	(revision )
+++ app/src/main/java/com/cyberocw/habittodosecretary/alaram/AlarmDataManager.java	(revision 49da8b1885f0c7b6778c9a3205e395c547088d63)
@@ -158,24 +158,18 @@
 		return mDb.modifyUse(item);
 	}
 
-	public void resetMinAlarmCall(){
-		resetMinAlarmCall(Const.ALARM_DATE_TYPE.REPEAT);
-		resetMinAlarmCall(Const.ALARM_DATE_TYPE.SET_DATE);
-	}
-
 	public void resetMinAlarmCall(int type){
-		ArrayList<AlarmTimeVO> alarmTimeList = null;
+		ArrayList<AlarmTimeVO> alarmTimetList = null;
 		String reqCode;
+		reqCode = Const.REQ_CODE;
 
 		if(type == Const.ALARM_DATE_TYPE.SET_DATE) {
-			alarmTimeList = mDb.getMinAlarmTime();
-			reqCode = Const.REQ_CODE;
+			alarmTimetList = mDb.getMinAlarmTime();
 		}
 		else if(type == Const.ALARM_DATE_TYPE.REPEAT){
 			Calendar cal = Calendar.getInstance();
 			int dayNum = cal.get(Calendar.DAY_OF_WEEK); //sun 1 mon 2 ...
-			alarmTimeList = mDb.getMinRepeatAlarm(dayNum);
-			reqCode = Const.REQ_CODE_REPEAT;
+			alarmTimetList = mDb.getMinRepeatAlarm(dayNum);
 		}
 		else{
 			Toast.makeText(mCtx, "알람 TYPE을 가져오지 못했습니다" + type, Toast.LENGTH_LONG).show();
@@ -205,17 +199,16 @@
 		}
 
 		//새로 등록
-		String[] arrReq = new String[alarmTimeList.size()];
+		String[] arrReq = new String[alarmTimetList.size()];
 
-		for(int i = 0; i < alarmTimeList.size(); i++){
-			arrReq[i] = String.valueOf(setAlarm(alarmTimeList.get(i), type));
+		for(int i = 0; i < alarmTimetList.size(); i++){
+			arrReq[i] = String.valueOf(setAlarm(alarmTimetList.get(i), type));
 		}
 
 		String newReqCode = TextUtils.join("," , arrReq);
 
 		//등록된 code 저장해둠
 		SharedPreferences.Editor editor = prefs.edit();
-		editor.remove(reqCode);
 		editor.putString(reqCode, newReqCode);
 	}
 
@@ -225,21 +218,17 @@
 		Intent myIntent = new Intent(mCtx, AlarmReceiver.class);
 
 		int callTime = alarmVO.getCallTime();
-		Calendar ccc = Calendar.getInstance();
-		long reqCode = ccc.getTimeInMillis();//alarmVO.getId() * 100 + callTime;
 
-		//myIntent.removeExtra("title");
+		long reqCode = alarmVO.getId() * 100 + callTime;
 
+		//myIntent.removeExtra("title");
+		Calendar ccc = Calendar.getInstance();
+		ccc.setTimeInMillis(alarmVO.getTimeStamp());
 		String strDay = ccc.get(Calendar.HOUR_OF_DAY) + "시 " + ccc.get(Calendar.MINUTE) + "분 " + ccc.get(Calendar.SECOND) + " 초";
 
-		long timeStamp = alarmVO.getTimeStamp();
-		ccc.setTimeInMillis(timeStamp);
-		ccc.add(Calendar.MINUTE, -10);
-		myIntent.putExtra("alarmTimeVO", alarmVO);
 		myIntent.putExtra("title", alarmVO.getAlarmTitle() + " " + (callTime < 0 ? callTime + "분 전" : (callTime > 0 ? callTime + "분 후" : "")));
 		myIntent.putExtra("reqCode", reqCode);
 		myIntent.putExtra("alarmDateType", type);
-		myIntent.putExtra("realTime", timeStamp);
 		PendingIntent pendingIntent = PendingIntent.getBroadcast(mCtx, (int) reqCode, myIntent, 0);
 
 		setAlarmExact(alarmDataManager, AlarmManager.RTC_WAKEUP, alarmVO.getTimeStamp(), pendingIntent);
@@ -250,11 +239,7 @@
 	@SuppressLint("NewApi")
 	private void setAlarmExact(AlarmManager am, int type, long time, PendingIntent it){
 		final int sdkVersion = Build.VERSION.SDK_INT;
-		/*
-		if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
-			am.setExactAndAllowWhileIdle(type, time, it);
-		}
-		else*/ if(sdkVersion >= Build.VERSION_CODES.KITKAT) {
+		if(sdkVersion >= Build.VERSION_CODES.KITKAT) {
 			Log.d(Const.DEBUG_TAG, "kitkat set alarmExact");
 			am.setExact(type, time, it);
 		}
Index: app/src/main/java/com/cyberocw/habittodosecretary/alaram/service/AlarmBackgroudService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cyberocw/habittodosecretary/alaram/service/AlarmBackgroudService.java	(revision )
+++ app/src/main/java/com/cyberocw/habittodosecretary/alaram/service/AlarmBackgroudService.java	(revision )
@@ -1,189 +0,0 @@
-package com.cyberocw.habittodosecretary.alaram.service;
-
-import android.app.Notification;
-import android.app.PendingIntent;
-import android.app.Service;
-import android.content.Context;
-import android.content.Intent;
-import android.os.Bundle;
-import android.os.CountDownTimer;
-import android.os.IBinder;
-import android.util.Log;
-import android.widget.TextView;
-
-import com.cyberocw.habittodosecretary.Const;
-import com.cyberocw.habittodosecretary.MainActivity;
-import com.cyberocw.habittodosecretary.R;
-import com.cyberocw.habittodosecretary.alaram.receiver.AlarmReceiver;
-import com.cyberocw.habittodosecretary.alaram.vo.AlarmTimeVO;
-import com.cyberocw.habittodosecretary.alaram.vo.AlarmVO;
-import com.cyberocw.habittodosecretary.util.TTSNoti;
-
-import java.text.DecimalFormat;
-import java.text.NumberFormat;
-import java.util.ArrayList;
-
-/**
- * Created by cyberocw on 2016-09-19.
- * service 및 alarm notibar 모두 중단 시키는 메서드 구현
- * start 시 위 메서드 호출 후 다시 등록하는 루틴 실행
- * 이 서비스는 한번에 한개만 돌아감
-  작업 큐에서 max remainTime을 가져와서 ramain time을 돌면서 큐에 들어있는 것을 체크하고 알림 울림
-   로직 상 10분 이상 점검하는 일은 생기지 않도록 만들기 -- 로직상 이러한 일은 생길 수 없도록10분 이내 다른 알림이 있는 경우들 외에는
- 생길 수 없음!!
- -추가- cancel은 어떻게 할지 고민 필요
- */
-public class AlarmBackgroudService extends Service {
-    public ArrayList<AlarmTimeVO> mArrAlarmVOList = new ArrayList<AlarmTimeVO>();
-    public long mMillisRemainTime = -1;
-    public TextView mTv;
-    NumberFormat mNumberFormat = new DecimalFormat("##00");
-    /**
-     * Created by cyberocw on 2015-11-16.
-     */
-    private Context mCtx = this;
-    private CountDownTimer mCountDownTimer = null;
-    private int mPosition = -1;
-    private String mTitle = "";
-    private AlarmReceiver mTimerListAdapter = null;
-
-    public AlarmBackgroudService() {
-    }
-    @Override
-    public void onCreate() {
-        super.onCreate();
-    }
-
-    @Override
-    public int onStartCommand(Intent intent, int flags, int startId) {
-        Log.d(Const.DEBUG_TAG, "onStartCommand" + " mCountdownTimer is null=" + (mCountDownTimer == null));
-        //if(mCountDownTimer != null)
-        //	mTimerListAdapter.showRunningAlert();
-        Bundle extras = intent.getExtras();
-
-        if(extras == null){
-            Log.d("service", " extras null!!!!");
-        }
-
-        // Get messager from the Activity
-        if (extras != null) {
-            Log.d("service", "onBind with extra");
-            //mMillisRemainTime = (Long) extras.get("realTime");
-            long realTime = (Long) extras.get("realTime");
-            int alarmDateType = (int) extras.get("alarmDateType");
-            AlarmTimeVO alarmTimeVO = (AlarmTimeVO) intent.getSerializableExtra("alarmTimeVO");
-
-            int index = findAlarmIndex(alarmTimeVO);
-
-            if(index == -1)
-                mArrAlarmVOList.add(alarmTimeVO);
-        }
-        setMaxReaminTime();
-        startTimer();
-
-        return START_REDELIVER_INTENT;
-        //return super.onStartCommand(intent, flags, startId);
-    }
-    public void setMaxReaminTime(){
-        mMillisRemainTime = -1;
-        for(int i = 0 ; i < mArrAlarmVOList.size(); i++){
-            if(mArrAlarmVOList.get(i).getTimeStamp() > mMillisRemainTime) {
-               mMillisRemainTime = mArrAlarmVOList.get(i).getTimeStamp();
-            }
-        }
-    }
-    public int findAlarmIndex(AlarmTimeVO alarmTimeVO){
-        int index = -1;
-        for(int i = 0 ; i < mArrAlarmVOList.size(); i++){
-            if(alarmTimeVO.getId() == mArrAlarmVOList.get(i).getId()) {
-                index = i;
-                break;
-            }
-        }
-        return index;
-    }
-
-    public void startTimer() {
-        startTimer(mMillisRemainTime);
-    }
-
-    public void startTimer(long remainTime) {
-        if (mCountDownTimer != null)
-            return;
-
-        Notification notification = new Notification(R.drawable.ic_launcher, "타이머", System.currentTimeMillis());
-
-        int second = (int) (remainTime / 1000) % 60;
-        int minute = (int) ((remainTime / (1000 * 60)) % 60);
-        int hour = (int) ((remainTime / (1000 * 60 * 60)));
-
-        Intent notificationIntent = new Intent(this, MainActivity.class);
-        notificationIntent.setFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP);
-        PendingIntent pendingIntent = PendingIntent.getActivity(this, Const.ONGOING_TIMER_NOTI_ID, notificationIntent, 0);
-
-        notification.setLatestEventInfo(this, "HbitTodo Timer is running",
-                mNumberFormat.format(hour) + ":" + mNumberFormat.format(minute) +
-                        ":" + mNumberFormat.format(second), pendingIntent);
-        startForeground(Const.ONGOING_TIMER_NOTI_ID, notification);
-
-        mCountDownTimer = new CountDownTimer(remainTime, 1000) {
-            public void onTick(long millisUntilFinished) {
-                mMillisRemainTime = millisUntilFinished;
-                int second = (int) (millisUntilFinished / 1000) % 60;
-                int minute = (int) ((millisUntilFinished / (1000 * 60)) % 60);
-                int hour = (int) ((millisUntilFinished / (1000 * 60 * 60)));
-
-                Log.d(Const.DEBUG_TAG, "on tinck =" + second);
-
-                if (mTv != null) {
-                    mTv.setText(mNumberFormat.format(hour) + ":" + mNumberFormat.format(minute) +
-                            ":" + mNumberFormat.format(second));
-                }
-            }
-
-            public void onFinish() {
-                if (mTv != null) {
-                    mTv.setText(mNumberFormat.format(0) + ":" + mNumberFormat.format(0) +
-                            ":" + mNumberFormat.format(0));
-                }
-                startAleart();
-                cancelTimer();
-                mCountDownTimer = null;
-            }
-        }.start();
-    }
-
-    private void startAleart() {
-        Intent ttsIntent = new Intent(mCtx, TTSNoti.class);
-        ttsIntent.putExtra("alaramTitle", mTitle);
-        mCtx.startService(ttsIntent);
-    }
-
-    public void cancelTimer() {
-        mMillisRemainTime = -1;
-        mCountDownTimer.cancel();
-        //stopForeground(true);
-        stopSelf();
-
-    }
-    @Override
-    public void onTaskRemoved(Intent rootIntent) {
-        Log.d(Const.DEBUG_TAG, "onTaskRemoved Service");
-        super.onTaskRemoved(rootIntent);
-    }
-
-    @Override
-    public void onDestroy() {
-        Log.d(Const.DEBUG_TAG, "onDestroy Service");
-        super.onDestroy();
-    }
-
-
-    @Override
-    public IBinder onBind(Intent intent) {
-        // We don't provide binding, so return null
-        return null;
-    }
-
-
-}
